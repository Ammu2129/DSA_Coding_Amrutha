//approach 1: using the DFS

int maxDepth(TreeNode* root) {
        if(root==NULL) return 0;
        return 1 + max(maxDepth(root->left),maxDepth(root->right));
}

//approach 2: BFS
int maxDepth(TreeNode* root) {
        if(root==NULL) return 0;
        queue<TreeNode*> que;
        que.push(root);
        int depth=0;
        while(!que.empty()){
            int size=que.size();
            depth+=1;
            while(size--){
                TreeNode* temp=que.front();
                que.pop();
                if(temp->left!=NULL) que.push(temp->left);
                if(temp->right!=NULL) que.push(temp->right);
            }
        }
        return depth;
}
