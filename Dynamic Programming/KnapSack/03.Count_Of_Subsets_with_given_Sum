https://www.geeksforgeeks.org/problems/perfect-sum-problem5633/0

Given an array arr of size n of non-negative integers and an integer sum, the task is to count all subsets of the given array 
with a sum equal to a given sum.

//bottom-up approach
int perfectSum(int arr[], int n, int sum)
	{
        // Your code goes here
        int t[n+1][sum+1];
        int count=1;
        for(int i=0;i<sum+1;i++){
            t[0][i]=0;
        }
        t[0][0]=1;
        // this is because if we have 0 as any element in the given array then we should consider that scenario also
        for(int i=1;i<n+1;i++){
            if(arr[i-1]==0){
                count=2*count;
                t[i][0]=count;
            }
            else{
                t[i][0]=t[i-1][0];
            }
        }
        
        int mod= (int)1e9+7;
        for(int i=1;i<n+1;i++){
            for(int j=1;j<sum+1;j++){
                if(arr[i-1]<=j){
                    t[i][j]=(t[i-1][j-arr[i-1]]+ t[i-1][j])%mod;
                }
                else{
                    t[i][j]=t[i-1][j];
                }
            }
        }
        return t[n][sum]%mod;
	}
