https://www.geeksforgeeks.org/problems/minimum-sum-partition3317/1?itm_source=geeksforgeeks&itm_medium=article&itm_campaign=practice_card

Given an array arr of size n containing non-negative integers, the task is to divide it into two sets S1 and S2 such that 
the absolute difference between their sums is minimum and find the minimum difference

//bottom-up approach
int minDifference(int arr[], int n)  { 
	    // Your code goes here
	    int sum=0;
	    for(int i=0;i<n;i++){
	        sum+=arr[i];
	    }
	    bool t[n+1][sum+1];
	    for(int i=0;i<sum+1;i++){
	        t[0][i]=false;
	    }
	    for(int i=0;i<n+1;i++){
	        t[i][0]=true;
	    }
	    
	    for(int i=1;i<n+1;i++){
	        for(int j=1;j<sum+1;j++){
	            if(arr[i-1]<=j){
	                t[i][j]=t[i-1][j-arr[i-1]] || t[i-1][j];
	            }
	            else{
	                t[i][j]=t[i-1][j];
	            }
	        }
	    }
	    int ans=sum;
	    for(int i=0;i<(sum/2)+1;i++){
	        if(t[n][i] && t[n][sum-i]) ans=min(ans,abs(sum-i-i));  // to get the minimum absolute difference between S1 and S2.
	    }
	    return ans;
	    
} 
