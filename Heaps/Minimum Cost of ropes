//given an array of length of ropes, we need to find the smallest cost to tie all the ropes.
//to tie two ropes of length l1 and l2 the cost is l1+l2.
//approach
//push all the elements to the min heap.
//until the size of heap is 1, pop the top two elements from the heap, add their sum to the answer and push their sum to the heap.

https://www.geeksforgeeks.org/problems/minimum-cost-of-ropes-1587115620/1

long long minCost(long long arr[], long long n) {
        // Your code here
        long long ans=0;
        priority_queue<long long, vector<long long>, greater<long long>> pq;
        for(int i=0;i<n;i++){
            pq.push(arr[i]);
        }
        while(pq.size()>1){
            long long sum=0;
            if(!pq.empty()){
                sum+=pq.top();
                pq.pop();
            }
            if(!pq.empty()){
                sum+=pq.top();
                pq.pop();
            }
            ans+=sum;
            pq.push(sum);
        }
        
        return ans;
}
