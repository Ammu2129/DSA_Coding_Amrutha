//given a list of sorted linked list, merge them into a single linked list in sorted order.
//approach use a min heap.

https://leetcode.com/problems/merge-k-sorted-lists/

ListNode* mergeKLists(vector<ListNode*>& lists) {
        ListNode* head=new ListNode(-100000);
        ListNode* temp=head;
        priority_queue<pair<int,ListNode*>,vector<pair<int,ListNode*>>, 
        greater<pair<int,ListNode*>>> pq;
        for(int i=0;i<lists.size();i++){
            if(lists[i]!=NULL){
                pq.push({lists[i]->val,lists[i]});
            }
        }
        while(!pq.empty()){
            ListNode* temp1=pq.top().second;
            pq.pop();
            if(temp1->next!=NULL){
                pq.push({temp1->next->val,temp1->next});
            }
            temp->next=temp1;
            temp=temp->next;
        }
        return head->next;
}
